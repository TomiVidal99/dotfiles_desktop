# inital config
clc # clear initial shit
addpath("~/.octave");
printf([char(27), '[94mWelcome to Octave!', char(27), '[0m\n']);
printf([char(27), '[94mCustom scripts: ', char(27), '[0m']);
printf([char(27), '[92mplotPhasor, bhaskara, cart, phasor.', char(27), '[0m\n']);

# Defino una función utilitaria para configurar los plots.
function configPlot(Figure = 1, Title = "Gráfico 1", limits = "auto", step = 1, fontsize = 14, linewidth = 2);
  figure(Figure);
  title(Title);
  grid on;
  hold on;
  axis(limits);
  set(gca, "linewidth", linewidth, "fontsize", fontsize);
  xbounds = xlim();
  set(gca, "xtick", xbounds(1):step:xbounds(2));
endfunction

function configPlotArgs()
  disp("function configPlot(Figure, Title, limits, step, fontsize, linewidth)");
endfunction

# DEFINICIÓN VARIABLES
# Magnitudes físicas.
E0 = 8.854e-12; # impermeabilidad electrica del medio [F/m]
K = 1 / (4*pi*E0); # constante de fuerzas coulombianas.
R0 = 0.53e-10; # radio de Bohr [m]
Me = 9.1e-31; # masa electrón [kg]
Qp = 1.602176634e-19; # carga del protón [C]
Qe = -Qp; # carga del electrón [C]
Kb = 8.617333262145e-5; # constante de Boltzmann [eV/°K]
Hp = 4.135667696e-15; # constante de Planck [eV*s]
C = 299792458; # Velocidad de la luz [m/s]

# DEFINICION DE FUNCIONES COMUNES.
FNFD = @(E, Ef, T) 1 / (1 + exp( (E-Ef) / (Kb*T) )); # Fermi-Dirac distribución de probabilidad de que un estado cuántico esté ocupado [unidad de volumen por unidad de energía].

# Funciones de analisis de sistemas.
U = @(t) (t >= 0);
Esc = @(t) (t>=-.5).*(t<=.5);
Tri = @(t) (1-t).*(t<=1).*(t>=0)+(1+t).*(t<0).*(t>=-1);
